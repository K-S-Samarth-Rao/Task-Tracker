{"ast":null,"code":"var _jsxFileName = \"/home/samarth/flask-react-app/Task-Tracker/src/components/Register.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Grid, Button, TextField } from '@material-ui/core';\nimport BackLink from './BackLink.js';\n\nconst Register = () => {\n  const buttonStyle = {\n    backgroundColor: '#ffffff',\n    color: '#808080',\n    margin: '15px 0'\n  }; // set initial state to clear out form if registration unsuccessful \n\n  const initialState = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: null,\n    password: ''\n  };\n  const [registerFormState, setRegisterFormState] = useState(initialState);\n  const [registerSuccess, setRegisterSuccess] = useState(false);\n\n  const handleChange = evt => setRegisterFormState({ ...registerFormState,\n    [evt.target.name]: evt.target.value\n  }); // sends and receive data from register route to check if user exist\n\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    fetch('/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(registerFormState)\n    }).then(res => {\n      if (!res.ok) {\n        alert('User already exists. Please Login.'); // param needs to be iterable\n\n        setRegisterFormState({ ...initialState\n        });\n      } else {\n        setRegisterSuccess(true);\n      }\n    });\n  };\n\n  const history = useHistory();\n\n  if (registerSuccess === true) {\n    // return <TodoList />\n    history.push('/todo-list');\n    console.log('Successfully Logged in');\n  }\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BackLink, {\n    selectedLink: '/',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"standard-required\",\n    label: \"First Name\",\n    name: \"firstName\",\n    value: registerFormState.firstName,\n    onChange: handleChange,\n    style: {\n      margin: '0 5px 0 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"standard-required\",\n    label: \"Last Name\",\n    name: \"lastName\",\n    value: registerFormState.lastName,\n    onChange: handleChange,\n    style: {\n      margin: '0 0 0 5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"standard-required\",\n    label: \"Email\",\n    name: \"email\",\n    value: registerFormState.email,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-helperText\",\n    label: \"Phone (ex: 1-234-567-8910)\",\n    name: \"Phone\",\n    value: registerFormState.phone,\n    onChange: handleChange,\n    helperText: \"optional: if you want Text Reminders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"standard-password-input\",\n    label: \"Password\",\n    type: \"password\",\n    name: \"password\",\n    value: registerFormState.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    style: buttonStyle,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default Register;","map":{"version":3,"sources":["/home/samarth/flask-react-app/Task-Tracker/src/components/Register.js"],"names":["React","useState","useHistory","Grid","Button","TextField","BackLink","Register","buttonStyle","backgroundColor","color","margin","initialState","firstName","lastName","email","phone","password","registerFormState","setRegisterFormState","registerSuccess","setRegisterSuccess","handleChange","evt","target","name","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","ok","alert","history","push","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Grid, Button, TextField } from '@material-ui/core';\nimport BackLink from './BackLink.js';\n\n\nconst Register = () => {\n  \n  const buttonStyle = {\n    backgroundColor: '#ffffff',\n    color: '#808080',\n    margin: '15px 0'\n  }\n\n  // set initial state to clear out form if registration unsuccessful \n  const initialState = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: null,\n    password: ''\n  }\n\n  const [registerFormState, setRegisterFormState] = useState(initialState);\n\n  const [registerSuccess, setRegisterSuccess] = useState(false);\n\n  const handleChange = (evt) => setRegisterFormState({\n    ...registerFormState,\n    [evt.target.name]: evt.target.value\n    }\n  );\n  \n  // sends and receive data from register route to check if user exist\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    fetch('/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(registerFormState)\n      })\n    .then(res => {\n      if (!(res.ok)) {\n        alert('User already exists. Please Login.');\n        // param needs to be iterable\n        setRegisterFormState({...initialState})\n      }\n      else {\n        setRegisterSuccess(true);\n      }\n    })\n  };\n\n  const history = useHistory();\n\n  if (registerSuccess === true) {\n    // return <TodoList />\n    history.push('/todo-list')\n    console.log('Successfully Logged in')\n  }\n\n  return ( \n    <Grid>\n      <BackLink selectedLink={'/'} />\n      <Grid>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <TextField \n              required id=\"standard-required\" \n              label=\"First Name\" \n              name=\"firstName\"\n              value={registerFormState.firstName}\n              onChange={handleChange}\n              style={{margin: '0 5px 0 0'}}\n            />\n            <TextField \n            required id=\"standard-required\" \n            label=\"Last Name\" \n            name=\"lastName\"\n            value={registerFormState.lastName}\n            onChange={handleChange}\n            style={{margin: '0 0 0 5px'}}\n            />\n          </div>\n          <div>\n            <TextField \n              required id=\"standard-required\" \n              label=\"Email\" \n              name=\"email\"\n              value={registerFormState.email}\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n        {/* need to validate phone number later */}\n            <TextField \n              id=\"standard-helperText\" \n              label=\"Phone (ex: 1-234-567-8910)\" \n              name=\"Phone\"\n              value={registerFormState.phone}\n              onChange={handleChange}\n              helperText=\"optional: if you want Text Reminders\"\n            />\n          </div>\n          <div>\n            <TextField\n              required id=\"standard-password-input\"\n              label=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              value={registerFormState.password}\n              onChange={handleChange}\n            />\n          </div>\n          <Button \n            variant=\"contained\" \n            style={buttonStyle} \n            type=\"submit\">\n              Submit\n          </Button>\n        </form>\n      </Grid>\n    </Grid>\n  )\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}