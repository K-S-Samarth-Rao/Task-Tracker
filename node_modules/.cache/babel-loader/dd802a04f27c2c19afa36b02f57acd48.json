{"ast":null,"code":"var _jsxFileName = \"/home/samarth/flask-react-app/Task-Tracker/src/components/ToDoItem.js\";\nimport React from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link } from 'react-router-dom'; // import Typography from '@material-ui/core/Typography';\n\nimport { Grid, Paper, Divider, IconButton, Checkbox, List, ListItem, ListItemText // ListItemIcon,\n, ListItemSecondaryAction } from '@material-ui/core';\n\nconst ToDoItem = ({\n  taskList,\n  removeTask,\n  completedTask\n}) => {\n  //   console.log(taskList, 'taskList')\n  // handles function from parent component, passes selected taskId back\n  const removeClickHandler = taskId => {\n    removeTask(taskId);\n  };\n\n  const checkHandler = taskId => {\n    completedTask(taskId);\n  };\n\n  if (taskList.length === 0) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 10\n      }\n    }, \"You currently have no tasks to do.\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, taskList.map(task => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: task.taskId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      style: {\n        wordWrap: 'break-word',\n        maxWidth: '90%'\n      },\n      primary: task.taskForm.task,\n      secondary: /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 23\n        }\n      }, task.taskForm.addNote ? `Additional Notes: ${task.taskForm.addNote}` : null, task.taskForm.addNote ? /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 50\n        }\n      }) : null), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 23\n        }\n      }, task.deadline ? `Complete by: ${new Date(task.deadline).toDateString()}` : null)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"end\",\n      color: \"primary\" //   checked={task.taskId}\n      ,\n      onClick: () => checkHandler(task.taskId) // inputProps={{ 'aria-labelledby': labelId }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"delete\",\n      onClick: () => removeClickHandler(task.taskId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/completed-tasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"See all completed tasks\")))));\n};\n\nexport default ToDoItem;","map":{"version":3,"sources":["/home/samarth/flask-react-app/Task-Tracker/src/components/ToDoItem.js"],"names":["React","DeleteIcon","Link","Grid","Paper","Divider","IconButton","Checkbox","List","ListItem","ListItemText","ListItemSecondaryAction","ToDoItem","taskList","removeTask","completedTask","removeClickHandler","taskId","checkHandler","length","map","task","wordWrap","maxWidth","taskForm","addNote","deadline","Date","toDateString","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link } from 'react-router-dom';\n// import Typography from '@material-ui/core/Typography';\nimport { \n    Grid, \n    Paper,\n    Divider,\n    IconButton,\n    Checkbox,\n    List,\n    ListItem,\n    ListItemText,\n    // ListItemIcon,\n    ListItemSecondaryAction\n } from '@material-ui/core';\n\n\nconst ToDoItem = ({taskList, removeTask, completedTask}) => {\n    \n//   console.log(taskList, 'taskList')\n  // handles function from parent component, passes selected taskId back\n  const removeClickHandler = (taskId) => {\n    removeTask(taskId);\n  }\n\n  const checkHandler = (taskId) => {\n    completedTask(taskId);\n  }\n\n  if (taskList.length === 0) {\n    return (\n      <p><em>You currently have no tasks to do.</em></p>\n    )\n  }\n  \n  return (\n    <Grid item xs={12} md={12} > \n      <Paper elevation={2}>\n        <List>\n          {taskList.map((task) => {\n            return (\n              <div key={task.taskId}>\n                <ListItem \n                  alignItems=\"flex-start\">\n                  <ListItemText \n                    style={{wordWrap: 'break-word', maxWidth: '90%'}}\n                    primary={task.taskForm.task}\n                    secondary={\n                    <span>\n                      <span>\n                        {task.taskForm.addNote ? (`Additional Notes: ${task.taskForm.addNote}`) : null}\n                        {task.taskForm.addNote ? <br></br> : null}\n                      </span>\n                      <span>\n                        {task.deadline ? `Complete by: ${new Date(task.deadline).toDateString()}` : null}\n                      </span>\n                    </span>\n                  } />\n                <ListItemSecondaryAction>\n                <Checkbox\n                  edge=\"end\"\n                  color=\"primary\"\n                //   checked={task.taskId}\n                  onClick={()=> checkHandler(task.taskId)}\n                // inputProps={{ 'aria-labelledby': labelId }}\n              />\n                  <IconButton edge=\"end\" \n                              aria-label=\"delete\" \n                              onClick={() => removeClickHandler(task.taskId)}>\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n              <Divider/>\n            </div>\n            )\n          })}\n          <Link to=\"/completed-tasks\">\n            <p style={{textAlign: 'center'}}>See all completed tasks</p>\n          </Link>\n        </List> \n      </Paper>\n    </Grid>\n  )\n\n}\n\nexport default ToDoItem;\n\n\n"]},"metadata":{},"sourceType":"module"}