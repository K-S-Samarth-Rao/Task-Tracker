{"ast":null,"code":"var _jsxFileName = \"/home/samarth/flask-react-app/Task-Tracker/src/components/CompletedTasks.js\";\nimport React, { useState, useEffect } from 'react';\nimport BackLink from './BackLink.js'; // import { Link } from 'react-router-dom';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Grid, Paper, Divider, IconButton, List, ListItem, ListItemText // ListItemIcon,\n, ListItemSecondaryAction } from '@material-ui/core';\n\nconst CompletedTasks = () => {\n  const [completedList, setCompletedList] = useState([]); //   console.log(completedList, 'completedList')\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('/completed-tasks');\n      const jsonResponse = await response.json();\n      setCompletedList(jsonResponse);\n    };\n\n    fetchData();\n  }, []);\n\n  const removeClickHandler = async taskId => {\n    // reformat into component since already using in TodoList\n    try {\n      const response = await fetch('/remove-task', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: taskId\n      });\n\n      if (response.ok) {\n        setCompletedList(completedList.filter(task => task.taskId !== taskId));\n      }\n    } catch (error) {\n      console.log(`Error: ${error}`);\n    }\n  };\n\n  if (completedList.length === 0) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      alignContent: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BackLink, {\n      selectedLink: '/todo-list',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 14\n      }\n    }, \"You have not completed any tasks yet.\")));\n  }\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BackLink, {\n    selectedLink: \"/todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    className: \"todo-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, completedList.map(task => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: task.taskId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      style: {\n        wordWrap: 'break-word',\n        maxWidth: '90%'\n      },\n      primary: task.taskForm.task,\n      secondary: task.taskForm.addNote ? `Additional Notes: ${task.taskForm.addNote}` : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"Delete\",\n      onClick: () => removeClickHandler(task.taskId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }));\n  })))));\n};\n\nexport default CompletedTasks;","map":{"version":3,"sources":["/home/samarth/flask-react-app/Task-Tracker/src/components/CompletedTasks.js"],"names":["React","useState","useEffect","BackLink","DeleteIcon","Grid","Paper","Divider","IconButton","List","ListItem","ListItemText","ListItemSecondaryAction","CompletedTasks","completedList","setCompletedList","fetchData","response","fetch","jsonResponse","json","removeClickHandler","taskId","method","headers","body","ok","filter","task","error","console","log","length","map","wordWrap","maxWidth","taskForm","addNote"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BackLink from './BackLink.js';\n// import { Link } from 'react-router-dom';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { \n    Grid, \n    Paper,\n    Divider,\n    IconButton,\n    List,\n    ListItem,\n    ListItemText,\n    // ListItemIcon,\n    ListItemSecondaryAction\n } from '@material-ui/core';\n\n\nconst CompletedTasks = () => {\n\n  const [completedList, setCompletedList] = useState([]);\n//   console.log(completedList, 'completedList')\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('/completed-tasks');\n      const jsonResponse = await response.json();\n      setCompletedList(jsonResponse);\n    }\n    fetchData();\n  }, []);\n\n\n  const removeClickHandler = async (taskId) => {\n    // reformat into component since already using in TodoList\n    try {\n      const response = await fetch('/remove-task', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: taskId\n      }); \n      if (response.ok) {\n        setCompletedList(completedList.filter(task => task.taskId !== taskId));\n      }\n    } catch (error) {\n        console.log(`Error: ${error}`)\n    }\n  };\n  \n\n  if (completedList.length === 0) {\n    return (\n      <Grid \n        item xs={12}\n        container \n        justify=\"center\"\n        alignItems=\"center\"\n        alignContent=\"center\">\n          <BackLink selectedLink={'/todo-list'} />\n          <p><em>You have not completed any tasks yet.</em></p>\n      </Grid>\n    )\n  }\n  \n\n  return (\n    <Grid \n      item xs={12} md={12}\n      container \n      justify=\"center\">\n      <BackLink selectedLink=\"/todo-list\" />\n      <Grid item xs={12} \n            container \n            justify=\"center\"\n            alignItems=\"center\"\n            className=\"todo-container\">\n      <Paper elevation={2}>\n        <List>\n          {completedList.map((task) => {\n            return (\n              <div key={task.taskId}>\n                <ListItem \n                  alignItems=\"flex-start\">\n                  <ListItemText \n                    style={{wordWrap: 'break-word', maxWidth: '90%'}}\n                    primary={task.taskForm.task}\n                    secondary={task.taskForm.addNote ? \n                        (`Additional Notes: ${task.taskForm.addNote}`) \n                        : null} />\n                  <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" \n                              aria-label=\"Delete\" \n                              onClick={() => removeClickHandler(task.taskId)}>\n                      <DeleteIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              <Divider/>\n            </div>\n            )\n          })}\n        </List> \n      </Paper>\n    </Grid>\n  </Grid>\n  )\n}\n\nexport default CompletedTasks;\n"]},"metadata":{},"sourceType":"module"}